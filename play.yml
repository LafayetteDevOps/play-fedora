---

# ansible play to prepare fedora workstation; may be refactored to playbook
# syntax: ansible-playbook play.yml --ask-become-pass
 
- hosts: localhost
  connection: local
  vars:
    packages:
      - ansible
      - docker
      - gedit
      - vim
    get_url:
      - https://releases.hashicorp.com/terraform/0.12.19/terraform_0.12.19_linux_amd64.zip
      - https://releases.hashicorp.com/packer/1.5.1/packer_1.5.1_linux_amd64.zip
    get_bundle:
      - https://s3.amazonaws.com/aws-cli/awscli-bundle.zip
        
  tasks:
  - name: hostname and operating system distribution
    # display the varible data type
    debug: 
      msg: "This system, {{ ansible_hostname }}, is running {{ ansible_distribution}} {{ ansible_distribution_version }} ."

  - name: facts to characterize system
    # simply printing the value of the fact which is Ansible UnSafe Text type 
    debug: 
      msg: 
        - "{{ ansible_architecture }}"
        - "{{ ansible_processor[0:3] }}"

  # accessing an element of dictionary
  - name: description to be filled in later - dictionary
    debug:
      msg: "{{ ansible_apparmor.status }}"
  
  # accessing a list       
  - name: description to be filled in later - list
    debug:
      msg: "{{ ansible_all_ipv4_addresses }}"

  # accessing the second element of a list
  - name: description to be filled in later - accessing an element
    debug:
      msg: "{{ ansible_all_ipv4_addresses[1] }}"

  - name: pull terraform and packer binaries and extract
    unarchive: 
      src: "{{ item }}"
      remote_src: yes
      dest: /usr/local/bin
    with_items: "{{ get_url }}"

  - name: pull awscli bundle and extract
    unarchive:
      src: "{{ item }}"
      remote_src: yes
      dest: /home/chris/Downloads/
    with_items: "{{ get_bundle }}"

  - name: Change to the directory of the awscli bundle and install
    shell:  ./awscli-bundle/install -i /usr/local/aws -b /usr/local/bin/aws
    args:
      chdir: /home/chris/Downloads/

  - name: ensure requested packages are present
    package:
      name: "{{ item }}"
      state: present
    with_items: "{{ packages }}" 
